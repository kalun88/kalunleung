---
import type { HTMLAttributes } from "astro/types";
import { getFormattedDate } from "@/utils";

type Props = HTMLAttributes<"time"> & {
	date: Date;
	dateTimeOptions?: Intl.DateTimeFormatOptions;
};

const { date, dateTimeOptions, ...attrs } = Astro.props;

const isValidDate = date instanceof Date && !isNaN(date.getTime());
const postDate = getFormattedDate(date, dateTimeOptions);
const datetimeAttr = isValidDate ? date.toISOString() : undefined;

<time datetime={isValidDate ? date.toISOString() : ''} {...attrs}>
	{isValidDate ? postDate : 'Invalid Date'}
</time>
{isValidDate ? (
	<time datetime={datetimeAttr} {...attrs}>
		{postDate}
	</time>
) : (
	<time {...attrs}>
		Invalid Date
	</time>
)}
